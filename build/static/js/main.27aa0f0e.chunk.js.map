{"version":3,"sources":["Todo/TodoColName.js","Todo/TodoPagination.js","Todo/TodoFilter.js","Todo/TodoRow.js","App.js","reportWebVitals.js","index.js"],"names":["TodoColName","keyName","onClick","sorting","classes","push","className","join","TodoPagination","numRows","rowsLimit","pages","i","map","page","index","TodoFilter","onChange","id","document","getElementById","value","toLowerCase","TodoRow","item","Object","values","val_i","jsonTable","require","rows","content","rowsPrepared","App","useState","undefined","sortSet","setSortSet","slice","setPage","changePage","pageNum","selectSortSet","doSorting","wayOfSort","rowsForSort","sort","a","b","tableName","template","rowsFiltered","filter","key","String","indexOf","keys","col_i","row_i","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.27aa0f0e.chunk.js","sourcesContent":["export default function TodoColName({ keyName, onClick, sorting }) {\r\n    \r\n    const classes = []\r\n\r\n    if (sorting[0] === keyName) {\r\n        if (sorting[1]) classes.push('ascending')\r\n        else classes.push('descending')\r\n    }\r\n\r\n    return (\r\n        <td className={classes.join(\" \")} onClick={() => onClick(keyName)}>{ keyName }</td>\r\n    )\r\n}","export default function TodoPagination({ numRows, rowsLimit, onClick}) {\r\n\r\n    let pages = [], i = 0\r\n    do {\r\n        i++\r\n        pages.push(i)\r\n    } while (i*rowsLimit < numRows)\r\n\r\n    return (\r\n        <ul className=\"reactTable_pagination\">\r\n            { pages.map((page, index)  => {\r\n                return (\r\n                    <li key={index} onClick={() => onClick(page)}>{ page }</li>\r\n                )\r\n            }\r\n            ) }\r\n        </ul>\r\n    )\r\n}","export default function TodoFilter({ onChange }) {\r\n\r\n    return (\r\n        <div className=\"reactTable_settings\">\r\n            <span>Фильтр: </span><input id=\"reactTable_filter\" onChange={() => onChange(document.getElementById(\"reactTable_filter\").value.toLowerCase())}></input>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function TodoRow({ item }) {\r\n    return (\r\n        <tr>\r\n            {Object.values(item).map((value,val_i) => <td key={val_i}>{value}</td>)}\r\n        </tr>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport TodoColName from './Todo/TodoColName'\r\nimport TodoPagination from './Todo/TodoPagination'\r\nimport TodoFilter from './Todo/TodoFilter'\r\nimport TodoRow from './Todo/TodoRow'\r\n\r\nlet jsonTable = require('./data.json')\r\nlet rows = jsonTable.content\r\nlet rowsPrepared = rows\r\n\r\nconst ROWSLIMIT = 50\r\n\r\nfunction App() {\r\n  \r\n  const [sortSet, setSortSet] = useState([undefined, true])  // в первом элементе колонка сортировки, во втором направление сортировки\r\n  const [page, setPage] = useState(rows.slice(0,50))\r\n  \r\n  function changePage(pageNum = 1) {\r\n    setPage(rowsPrepared.slice((pageNum - 1) * ROWSLIMIT, pageNum * ROWSLIMIT))\r\n  }\r\n\r\n  function doPreparation(template = \"\") {\r\n    let rowsFiltered = rows.filter(item => {\r\n      for (let key in item) {\r\n        if (String(item[key]).toLowerCase().indexOf(template) !== -1) return true\r\n      }\r\n      return false \r\n    })\r\n    sortSet[0] ? doSorting(sortSet[0], sortSet[1], rowsFiltered) : rowsPrepared = rowsFiltered\r\n  }\r\n\r\n  function selectSortSet(keyName) {\r\n    if ((sortSet[0] === keyName) && sortSet[1]) {\r\n      setSortSet([keyName, false])\r\n      doSorting(keyName, false)\r\n    }\r\n    else {\r\n      setSortSet([keyName, true])\r\n      doSorting(keyName, true)\r\n    }\r\n  }\r\n\r\n  function doSorting(keyName,wayOfSort, rowsForSort = rowsPrepared) {\r\n    rowsPrepared = wayOfSort ? rowsForSort.sort((a, b) => (a[keyName] < b[keyName]) ? -1 : 1)\r\n                             : rowsForSort.sort((a, b) => (a[keyName] > b[keyName]) ? -1 : 1)\r\n    changePage()\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <h1>{jsonTable.tableName}</h1>\r\n      <TodoFilter onChange={doPreparation}/>\r\n      <table className=\"reactTable\">\r\n        <thead>\r\n          <tr>\r\n            { Object.keys(rows[0]).map((keyName, col_i) => {return <TodoColName keyName={keyName} key={col_i} onClick={selectSortSet} sorting={sortSet}/>} )}\r\n          </tr>\r\n        </thead>  \r\n        <tbody>\r\n          { page.map((item,row_i) => <TodoRow item={item} key={row_i} />)}\r\n        </tbody>\r\n      </table>\r\n      <TodoPagination numRows={rows.length} rowsLimit={ROWSLIMIT} onClick={changePage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}